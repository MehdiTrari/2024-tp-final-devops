name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && echo "Postgres is ready" && exit 0
            echo "Waiting for Postgres..."
            sleep 3
          done
          echo "Postgres failed to start" && exit 1

      - name: Set environment variables
        env:
          PG_URL: ${{ secrets.PG_URL }}
        run: echo "PG_URL=${{ secrets.PG_URL }}" >> $GITHUB_ENV

      - name: Install dependencies (vote-api)
        working-directory: vote-api
        run: go mod tidy

      - name: Run Go tests
        working-directory: vote-api
        run: go test ./... -v

  webclient-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        working-directory: web-client
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers
        working-directory: web-client
        run: npx playwright install --with-deps

      - name: Run WebClient Unit Tests
        working-directory: web-client
        run: yarn test

  build-artifacts:
    runs-on: ubuntu-latest
    needs:
      - webclient-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies and build
        working-directory: web-client
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-client-build
          path: web-client/.next

  push-docker-images:
    runs-on: ubuntu-latest
    needs:
      - build-artifacts
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push vote-api image
        run: |
          docker build -t mehditrr/vote-api:latest ./vote-api
          docker push mehditrr/vote-api:latest

      - name: Push web-client image
        run: |
          docker build -t mehditrr/web-client:latest ./web-client
          docker push mehditrr/web-client:latest

      - name: Push docs image
        run: |
          docker build -t mehditrr/docs:latest ./docs
          docker push mehditrr/docs:latest
